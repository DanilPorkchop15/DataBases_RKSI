MySQL.txt
Создание и заполнениетаблиц 


CREATE TABLE `salespeople` (
  `snum` int NOT NULL,
  `sname` varchar(30) ,
  `naprav` varchar(30) ,
  `city` varchar(30) ,
  `comm` float(3,2),
  PRIMARY KEY(snum)
);

INSERT INTO `salespeople` (`snum`, `sname`, `naprav`, `city`, `comm`) VALUES
(1001, 'Peel', 'табачные изделия', 'London', 0.12),
(1002, 'Serres', 'молочная продукция', 'San Jose', 0.16),
(1003, 'Axelrod', 'колбасная продукция', 'New York', 0.10),
(1004, 'Motika', 'мясная продукция', 'London', 0.11),
(1007, 'Rifkin', 'алкогольная продукция', 'Barcelona', 0.16);

CREATE TABLE `customers` (
  `cnum` int NOT NULL,
  `cname` varchar(30),
  `pol` varchar(30),
  `city` varchar(30),
  `rating` int ,
  `snum` int , 
  PRIMARY KEY(cnum),
  FOREIGN KEY (snum) REFERENCES salespeople(snum)
  
);

INSERT INTO `customers` (`cnum`, `cname`, `pol`, `city`, `rating`, `snum`) VALUES
(2001, 'Hoffman', 'м', 'Paris', 100, 1001),
(2002, 'Giovanni', 'м', 'Rome', 200, 1003),
(2003, 'Liu', 'ж', 'San Jose', 200, 1002),
(2004, 'Grass', 'м', 'Berlin', 300, 1002),
(2006, 'Clemens', 'ж', 'Paris', 100, 1001),
(2007, 'Pereira', 'м', 'Rome', 100, 1004),
(2008, 'Cisneros', 'м', 'San Jose', 300, 1007);


CREATE TABLE `orders` (
  `onum` int NOT NULL,
  `amt` float(10,2) ,
  `dostavka` int ,
  `oplata` varchar(30) ,
  `odate` date ,
  `cnum` int ,
  `snum` int ,
  PRIMARY KEY(onum),
  FOREIGN KEY (cnum) REFERENCES customers(cnum),
  FOREIGN KEY (snum) REFERENCES salespeople(snum)

);

INSERT INTO `orders` (`onum`, `amt`, `dostavka`, `oplata`, `odate`, `cnum`, `snum`) VALUES
(3001, 18.69, 1000, ' наличный', '2021-03-10', 2008, 1007),
(3002, 1900.10, 2000, 'безналичный', '2021-03-10', 2007, 1004),
(3003, 767.19, 2316, ' наличный', '2021-03-10', 2001, 1001),
(3005, 5160.45, 1245, 'безналичный', '2021-03-10', 2003, 1003),
(3006, 1098.16, 7654, ' наличный', '2021-03-10', 2008, 1007),
(3007, 75.75, 4324, ' наличный', '2021-04-10', 2004, 1002),
(3008, 4723.00, 7644, 'безналичный', '2021-05-10', 2006, 1001),
(3009, 1713.23, 5392, 'безналичный', '2021-04-10', 2002, 1003),
(3010, 1309.95, 1240, ' наличный', '2021-06-10', 2004, 1002);



Модификация (6)

ALTER TABLE salespeople RENAME salespeople1;

ALTER TABLE salespeople1 CHANGE city city1 VARCHAR(100);

ALTER TABLE salespeople1 CHANGE sname sname1 VARCHAR(100);

ALTER TABLE salespeople1 ADD Naprav VARCHAR(100) AFTER sname1;

UPDATE salespeople1 SET Naprav = 'молочная продукция' WHERE snum = 1001;
UPDATE salespeople1 SET Naprav = 'алкогольная продукция' WHERE snum = 1002;
UPDATE salespeople1 SET Naprav = 'табачные изделия' WHERE snum = 1003;
UPDATE salespeople1 SET Naprav = 'мясная продукция' WHERE snum = 1004;
UPDATE salespeople1 SET Naprav = 'соки-воды' WHERE snum = 1007;

ALTER TABLE orders ADD Dostavka INTEGER(10) AFTER amt;

UPDATE orders SET Dostavka = 300 WHERE onum = 3001;
UPDATE orders SET Dostavka = 400 WHERE onum = 3002;
UPDATE orders SET Dostavka = 450 WHERE onum = 3003;
UPDATE orders SET Dostavka = 230 WHERE onum = 3005;
UPDATE orders SET Dostavka = 530 WHERE onum = 3006;
UPDATE orders SET Dostavka = 990 WHERE onum = 3007;
UPDATE orders SET Dostavka = 1000 WHERE onum = 3008;
UPDATE orders SET Dostavka = 1230 WHERE onum = 3009;
UPDATE orders SET Dostavka = 350 WHERE onum = 3010;
UPDATE orders SET Dostavka = 220 WHERE onum = 3011;

ALTER TABLE orders ADD Oplata VARCHAR(50) AFTER Dostavka

UPDATE orders SET Oplata = 'Наличными' WHERE onum IN (3001, 3003, 3005, 3008, 3010);
UPDATE orders SET Oplata = 'Безнал' WHERE onum NOT IN (3001, 3003, 3005, 3008, 3010);

ALTER TABLE customers ADD pol VARCHAR(100) AFTER cname;

UPDATE customers SET pol = 'Муж' WHERE customers.cnum IN (2001, 2003, 2008);
UPDATE customers SET pol = 'Жен' WHERE customers.cnum NOT IN (2001, 2003, 2008);

UPDATE customers SET city = 'Paris' WHERE city = 'London'

UPDATE salespeople1 SET comm = 0.16 WHERE comm > 0.12;

DELETE FROM orders WHERE onum = 3011;

ALTER TABLE salespeople1 RENAME salespeople;
ALTER TABLE salerpeople CHANGE sname1 sname VARCHAR(100);
ALTER TABLE salerpeople CHANGE city1 city VARCHAR(100);


Условные операторы (Выборка) (7)

Часть 1

1)CREATE VIEW v71 AS SELECT DISTINCT city FROM customers;
2)SELECT DISTINCT rating FROM customers;
3)SELECT DISTINCT comm FROM salespeople;
4)SELECT * FROM salespeople WHERE city = 'London';
5)SELECT * FROM salespeople WHERE comm > 0.12;
6)SELECT * FROM customers WHERE city = 'Rome';
7)SELECT * FROM customers WHERE rating IN (100, 300);
8)SELECT * FROM orders WHERE amt < 1000;
9)SELECT * FROM customers WHERE rating = 200 AND city = "Rome"
10)SELECT * FROM customers WHERE rating = 300 OR city = "Berlin";

Часть 2

1)SELECT * FROM customers WHERE snum IN(1001, 1002, 1007);
2)SELECT * FROM orders WHERE cnum IN(2001, 2004, 2008);
3)SELECT * FROM salespeople WHERE snum BETWEEN 1001 AND 1005;
4)SELECT * FROM salespeople WHERE comm BETWEEN 0.10 AND 0.13;
5)SELECT * FROM customers WHERE cname BETWEEN 'A%' AND 'G%';
6)SELECT * FROM customers WHERE city BETWEEN 'A%' AND 'L%';
7)SELECT * FROM orders WHERE odate BETWEEN '2021-03-10' AND '2021-05-10';
8)SELECT * FROM customers WHERE cname LIKE "C%";
9)SELECT * FROM customers WHERE cname LIKE "G%";
10)SELECT * FROM customers WHERE cname LIKE "G%s";


8 ПЗ


1)SELECT COUNT(*) AS 'Количество продавцов' FROM salespeople;
2)SELECT COUNT(DISTINCT city) AS 'Города продавцов' FROM salespeople;
3)SELECT COUNT(*) AS 'Количество строк' FROM customers;
4)SELECT SUM(rating) AS 'Общий рейтинг заказчиков' FROM customers;
5)SELECT SUM(amt) AS 'Сумма заказов' FROM orders;
6)SELECT ROUND(AVG(rating)) AS 'Средний рейтинг заказчиков' FROM customers;
7)SELECT ROUND(AVG(amt), 2) AS 'Средняя стоимость заказов' FROM orders;
8)SELECT MIN(rating) AS 'Минимальный рейтинг заказчика' FROM customers
9)SELECT MAX(comm) AS 'Максимальная комиссия продавца' FROM salespeople;
10)SELECT SUM(amt) + SUM(dostavka) AS 'Общая стоимость заказа' FROM orders;
10.2)SELECT amt + dostavka AS 'Общая стоимость заказа' FROM orders;
11)SELECT cname, city, ROUND(rating/50, 2) AS 'rating' FROM customers;
12)SELECT sname, city, ROUND(SIN(comm) * 10, 2) AS 'comm' FROM salespeople;
13)SELECT 'номер заказчика - ', snum, sname, city FROM salespeople;
14)SELECT 'номер заказчика - ', snum, sname, city, 'комиссия, %', comm FROM salespeople;


9 ПЗ

Часть 1

1)SELECT COUNT(DISTINCT city) AS 'Количество городов' FROM customers WHERE city IS NOT NULL;
2)SELECT cnum, MIN(amt) AS 'Минимальная стоимость' FROM orders GROUP BY cnum;
3)SELECT snum, odate, MIN(amt) AS 'Минимальная стоимость' FROM orders GROUP BY snum, odate;
4)SELECT cnum , MIN(amt) AS 'Минимальная стоимость' FROM orders GROUP BY cnum HAVING cnum IN (SELECT cnum FROM customers WHERE cname IN ('Cisneros', 'Grass', 'Clemens')) ;
5)SELECT cname FROM customers WHERE cname LIKE 'G%' ORDER BY cname;
6)SELECT city, MAX(rating) AS 'Максимальный рейтинг' FROM customers GROUP BY city;
7)SELECT odate, COUNT(DISTINCT snum) AS 'Количество продавцов' FROM orders GROUP BY odate;
8)SELECT snum, odate, COUNT(*) AS 'Количество заказов' FROM orders GROUP BY snum, odate;

Часть 2

1)SELECT rating, GROUP_CONCAT(cname) AS 'Список имен заказчиков' FROM customers GROUP BY rating;
2)SELECT snum, GROUP_CONCAT(cnum) AS 'Список заказчиков ' FROM orders GROUP BY snum;
3)SELECT snum, sname, city FROM salespeople ORDER BY sname DESC;
4)SELECT cnum, cname, city, rating FROM customers ORDER BY rating, cname;
5)SELECT sname, city FROM salespeople GROUP BY city ORDER BY sname;
6)SELECT cname, city, rating FROM customers GROUP BY 2;
7)SELECT city, COUNT(rating) AS 'Количество рейтингов' FROM customers GROUP BY city ORDER BY 2;


10 ПЗ

1)SELECT sname, cname, amt FROM salespeople, customers, orders WHERE salespeople.snum = orders.snum AND customers.cnum = orders.cnum AND amt BETWEEN 700 AND 2000;
2)SELECT sname, amt-amt*comm FROM salespeople, customers, orders WHERE salespeople.snum = orders.snum AND customers.cnum = orders.cnum;
3)SELECT cname, sname FROM salespeople, customers WHERE salespeople.snum = customers.snum;
4)SELECT cname, sname, salespeople.city FROM salespeople, customers WHERE salespeople.city = customers.city
5)SELECT odate, comm FROM orders, salespeople WHERE orders.snum = salespeople.snum AND comm < 0.12
6)SELECT amt, rating FROM customers, orders WHERE customers.cnum = orders.cnum AND rating > 100
7)SELECT DISTINCT cname, odate FROM customers, orders WHERE customers.cnum = orders.cnum AND odate = '2021-03-10';
8)SELECT cname, amt, comm, odate FROM orders, salespeople, customers WHERE orders.snum = salespeople.snum AND orders.cnum=customers.cnum AND odate = '2021-04-10'
9)SELECT cname, rating, amt, odate FROM orders, customers WHERE orders.cnum=customers.cnum AND amt>3000 AND odate='2021-03-10'
10)SELECT onum, sname, cname, customers.city FROM orders, salespeople, customers WHERE orders.cnum = customers.cnum  AND customers.city = 'San Jose' AND salespeople.city = 'San Jose'

11 ПЗ

1)SELECT * FROM orders WHERE cnum = (SELECT cnum FROM customers WHERE cname = "Hoffman");
2)SELECT * FROM orders WHERE snum = (SELECT snum FROM salespeople WHERE city = "New York"); 
3)SELECT * FROM customers WHERE snum = (SELECT snum FROM salespeople WHERE sname = "Motika");
4)SELECT * FROM salespeople WHERE snum = (SELECT snum FROM customers WHERE cname = "Liu");
5)SELECT * FROM customers WHERE cnum = (SELECT cnum FROM customers WHERE city = "Rome" AND rating = 100);

12 ПЗ 

1.1)SELECT cname, rating,ROUND(AVG(amt), 2) AS "Средняя стоимость заказа" FROM customers, orders WHERE customers.cnum = orders.cnum GROUP BY cname;
1.2)SELECT cname, rating, ROUND((SELECT AVG(orders.amt) FROM orders WHERE orders.cnum = customers.cnum), 2) AS "Средняя стоимость заказа" FROM customers;
2)SELECT cname, city, rating FROM customers WHERE rating < (SELECT AVG(rating) FROM customers) AND city = 'Rome';
3)SELECT snum, comm FROM salespeople WHERE snum IN (SELECT snum FROM customers WHERE city = "Paris");
4)SELECT COUNT(*), odate AS "Количество заказов с суммой приобретения ниже среднего" FROM orders WHERE amt < (SELECT AVG(amt) FROM orders) AND odate = "2021-03-10";
5)SELECT * FROM salespeople WHERE snum = (SELECT cnum FROM customers WHERE city = "Berlin") - 1000;
6)SELECT snum, (SELECT SUM(amt) FROM orders WHERE orders.snum = salespeople.snum) AS sum_amt FROM salespeople WHERE (SELECT SUM(amt) FROM orders WHERE orders.snum = salespeople.snum) > (SELECT MAX(amt) FROM orders);
